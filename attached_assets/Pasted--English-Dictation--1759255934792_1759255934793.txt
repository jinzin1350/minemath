
من یک ماژول English Dictation به اپلیکیشنم اضافه کردم. حالا می‌خوام گزارش‌دهی براش به صفحه موجود `/report` اضافه کنم.

## 🎯 چیزی که می‌خوام:

### 1. اضافه کردن Tab جدید به صفحه Report

⚠️ **CRITICAL: صفحه /report در حال حاضر وجود داره و شامل گزارش‌های Math هست. نباید به اون آسیب برسه!**

**الزامات:**
- یه Tab جدید به نام "English Dictation" یا "Spelling" به کنار Tab های موجود اضافه بشه
- Tab های قبلی (Math Reports) همونطور که هستن بمونن
- وقتی روی Tab Dictation کلیک می‌شه، محتوای مربوط به Dictation نمایش داده بشه
- وقتی روی Tab های Math کلیک می‌شه، محتوای Math نمایش داده بشه
- هر Tab باید data مخصوص به خودش رو نمایش بده
- Navigation بین Tab ها باید smooth باشه

### 2. ساختار Tab ها:
صفحه /report:
┌─────────────────────────────────────┐
│  [Math Reports] [English Dictation] │  ← Tabs
├─────────────────────────────────────┤
│                                     │
│  محتوای Tab انتخاب شده             │
│                                     │
└─────────────────────────────────────┘

یا اگه چندین Tab Math داری:
صفحه /report:
┌──────────────────────────────────────────────┐
│ [Math - Addition] [Math - Subtraction]       │
│ [Math - Multiplication] [English Dictation]  │  ← Tabs
├──────────────────────────────────────────────┤
│                                              │
│  محتوای Tab انتخاب شده                      │
│                                              │
└──────────────────────────────────────────────┘

### 3. محتوای Tab Dictation:

**آمار کلی (Overview Cards):**
┌──────────────┬──────────────┬──────────────┐
│ Total Games  │ Total Words  │ Accuracy     │
│    150       │    1,245     │    89%       │
└──────────────┴──────────────┴──────────────┘
┌──────────────┬──────────────┬──────────────┐
│ Correct      │ Wrong        │ Streak 🔥    │
│    1,108     │    137       │    7 Days    │
└──────────────┴──────────────┴──────────────┘

**Performance by Game Mode:**
┌─────────────────────────────────────────┐
│  📊 Performance by Game Mode            │
├─────────────────────────────────────────┤
│  ✍️ Typing Mode                         │
│  - 95 Games | 850 Score                 │
│  - 92% Accuracy                         │
│  - 45 Correct | 4 Wrong                 │
│                                         │
│  🎯 Multiple Choice                     │
│  - 55 Games | 395 Score                 │
│  - 85% Accuracy                         │
│  - 28 Correct | 5 Wrong                 │
└─────────────────────────────────────────┘

**نمودار پیشرفت روزانه:**
┌─────────────────────────────────────────┐
│  📈 Daily Progress (Last 7 Days)        │
│                                         │
│  [نمودار خطی یا میله‌ای]               │
│                                         │
└─────────────────────────────────────────┘

**Performance by Level:**
┌─────────────────────────────────────────┐
│  🎯 Performance by Level                │
│                                         │
│  Level 1: ████████████ 95%             │
│  Level 2: ██████████░░ 88%             │
│  Level 3: ████████░░░░ 82%             │
│  Level 4: ██████░░░░░░ 75%             │
│  Level 5: ████░░░░░░░░ 65%             │
└─────────────────────────────────────────┘

**Recent Activity:**
┌─────────────────────────────────────────┐
│  🕐 Recent Games                        │
│                                         │
│  • Typing Mode - Level 3 - 85% - 2h ago│
│  • Multiple Choice - Level 2 - 92% - 5h│
│  • Typing Mode - Level 4 - 78% - 1d ago│
└─────────────────────────────────────────┘

### 4. Implementation Details:

**الف) آپدیت کامپوننت Report:**

در فایل صفحه `/report` (معمولاً `Report.tsx` یا `ReportsPage.tsx`):
```typescript
// استفاده از state برای مدیریت Tab های فعال
const [activeTab, setActiveTab] = useState('math'); // یا 'dictation'

// یا اگه از React Router استفاده می‌کنی:
// const [searchParams, setSearchParams] = useSearchParams();
// const activeTab = searchParams.get('tab') || 'math';
ب) ساختار Tab Navigation:
typescript<div className="tabs-container">
  <button
    onClick={() => setActiveTab('math')}
    className={activeTab === 'math' ? 'active-tab' : 'inactive-tab'}
  >
    🧮 Math Reports
  </button>
  
  <button
    onClick={() => setActiveTab('dictation')}
    className={activeTab === 'dictation' ? 'active-tab' : 'inactive-tab'}
  >
    📚 English Dictation
  </button>
</div>

<div className="tab-content">
  {activeTab === 'math' && (
    <MathReports /> // کامپوننت موجود Math
  )}
  
  {activeTab === 'dictation' && (
    <DictationReports /> // کامپوننت جدید Dictation
  )}
</div>
ج) یا اگه چندین Math Tab داری:
typescript<div className="tabs-container">
  <button onClick={() => setActiveTab('math-addition')}>
    ➕ Addition
  </button>
  <button onClick={() => setActiveTab('math-subtraction')}>
    ➖ Subtraction
  </button>
  <button onClick={() => setActiveTab('math-multiplication')}>
    ✖️ Multiplication
  </button>
  <button onClick={() => setActiveTab('dictation')}>
    📚 Dictation
  </button>
</div>
5. ساختار فایل‌ها:
⚠️ هیچ فایل موجودی رو تغییر نده! فقط اضافه کن:
client/src/
├── pages/
│   └── Report.tsx (فایل موجود - فقط Tab جدید اضافه می‌شه)
│
├── components/
│   ├── reports/
│   │   ├── MathReports.tsx (موجود - دست نزن)
│   │   └── DictationReports.tsx (جدید)
│   │
│   └── dictation/
│       ├── DictationStats.tsx (جدید)
│       ├── DictationProgressChart.tsx (جدید)
│       ├── DictationModeComparison.tsx (جدید)
│       └── DictationRecentActivity.tsx (جدید)
6. Database Queries (از جداول موجود):
sql-- آمار کلی
SELECT * FROM dictation_user_progress WHERE user_id = $1;

-- آمار به تفکیک Mode
SELECT 
    game_mode,
    COUNT(*) as total_games,
    SUM(score) as total_score,
    AVG(accuracy) as avg_accuracy,
    SUM(words_correct) as total_correct,
    SUM(words_total - words_correct) as total_wrong,
    MAX(level_reached) as max_level
FROM dictation_game_history 
WHERE user_id = $1
GROUP BY game_mode;

-- آمار 7 روز گذشته
SELECT 
    DATE(played_at) as date,
    COUNT(*) as games,
    AVG(accuracy) as accuracy
FROM dictation_game_history 
WHERE user_id = $1 
    AND played_at >= NOW() - INTERVAL '7 days'
GROUP BY DATE(played_at)
ORDER BY date;

-- آمار به تفکیک Level
SELECT 
    level_reached,
    AVG(accuracy) as avg_accuracy,
    COUNT(*) as games_played
FROM dictation_game_history 
WHERE user_id = $1
GROUP BY level_reached
ORDER BY level_reached;

-- بازی‌های اخیر
SELECT 
    game_mode,
    level_reached,
    accuracy,
    score,
    played_at
FROM dictation_game_history 
WHERE user_id = $1
ORDER BY played_at DESC
LIMIT 5;
7. API Endpoints (اضافه کردن به endpoints موجود):
typescript// در server/routes/dictation.ts

// آمار کلی
GET /api/dictation/stats/:userId

// آمار روزانه
GET /api/dictation/stats/:userId/daily?days=7

// آمار به تفکیک Mode
GET /api/dictation/stats/:userId/by-mode

// آمار به تفکیک Level
GET /api/dictation/stats/:userId/by-level

// بازی‌های اخیر
GET /api/dictation/history/:userId/recent?limit=5
8. Styling (Tailwind):
typescript// Active Tab
className="px-6 py-3 font-semibold text-white bg-purple-600 rounded-t-lg"

// Inactive Tab
className="px-6 py-3 font-semibold text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-t-lg transition"

// Tab Content
className="bg-white rounded-b-lg rounded-tr-lg shadow-lg p-6"
9. مثال کد کامل Integration:
typescript// در Report.tsx (فایل موجود)

import { useState } from 'react';
import MathReports from '../components/reports/MathReports';
import DictationReports from '../components/reports/DictationReports'; // جدید

const ReportPage = () => {
  const [activeTab, setActiveTab] = useState('math');

  return (
    <div className="max-w-7xl mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-6">📊 Progress Reports</h1>
      
      {/* Tab Navigation */}
      <div className="flex gap-2 mb-6 border-b">
        <button
          onClick={() => setActiveTab('math')}
          className={`px-6 py-3 font-semibold rounded-t-lg transition ${
            activeTab === 'math'
              ? 'text-white bg-blue-600'
              : 'text-gray-600 hover:bg-gray-100'
          }`}
        >
          🧮 Math Reports
        </button>
        
        <button
          onClick={() => setActiveTab('dictation')}
          className={`px-6 py-3 font-semibold rounded-t-lg transition ${
            activeTab === 'dictation'
              ? 'text-white bg-purple-600'
              : 'text-gray-600 hover:bg-gray-100'
          }`}
        >
          📚 English Dictation
        </button>
      </div>

      {/* Tab Content */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        {activeTab === 'math' && <MathReports />}
        {activeTab === 'dictation' && <DictationReports />}
      </div>
    </div>
  );
};

export default ReportPage;
10. الزامات بسیار مهم:
⚠️ CRITICAL REQUIREMENTS:

هیچ تغییری در کدهای Math نده:

کامپوننت‌های Math دست نخورده بمونن
Queries و API های Math تغییر نکنن
Styling و Layout های Math حفظ بشن


جداسازی کامل Data:

Data های Math و Dictation کاملاً جدا باشن
هر Tab data مخصوص خودش رو fetch کنه
Cache ها مجزا باشن


Navigation State:

activeTab باید persistent باشه (اگه ممکنه با URL query)
مثال: /report?tab=dictation
وقتی refresh می‌شه، همون tab انتخاب بمونه


Performance:

فقط data Tab فعال fetch بشه
استفاده از React.lazy برای code splitting
Loading states برای هر Tab


Responsive:

Tab ها در موبایل به صورت dropdown یا vertical باشن
نمودارها responsive باشن



11. Chart Library:
از همون کتابخونه‌ای که برای Math Reports استفاده شده، استفاده کن:

اگه Recharts هست → از Recharts استفاده کن
اگه Chart.js هست → از Chart.js استفاده کن
سبک نمودارها باید consistent باشه

12. مراحل پیاده‌سازی:

✅ بررسی دقیق ساختار صفحه /report موجود
✅ بررسی کامپوننت‌های Math Reports
✅ ساخت کامپوننت DictationReports.tsx
✅ ساخت sub-components (Stats, Charts, etc.)
✅ اضافه کردن Tab Navigation به Report.tsx
✅ اضافه کردن API endpoints
✅ تست کامل هر دو Tab
✅ بررسی responsive
✅ تست performance

13. Testing Checklist:

 Tab Math به درستی کار می‌کنه (مثل قبل)
 Tab Dictation data صحیح نمایش می‌ده
 Navigation بین Tab ها smooth هست
 هر Tab data مخصوص خودش رو می‌گیره
 Refresh صفحه مشکلی ایجاد نمی‌کنه
 در موبایل به درستی نمایش داده می‌شه
 Loading و Error states کار می‌کنن
 نمودارها درست render می‌شن

📝 نکات نهایی:

⚠️ کد Math Reports رو اصلاً دست نزن
⚠️ فقط یه Tab جدید اضافه کن
⚠️ از همون styling pattern که Math داره، استفاده کن
⚠️ همه چیز باید consistent باشه
استفاده از همون user authentication
Error handling کامل
Loading states

لطفاً ابتدا فایل Report.tsx موجود رو بررسی کن و دقیقاً به همون سبک و ساختار، Tab جدید رو اضافه کن. هیچ چیزی از Math Reports نباید خراب بشه!